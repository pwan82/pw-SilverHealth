rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
		// Rule for Users collection
    match /users/{userId} {
      // Allow the logged-in user to read and update their own document
      allow read: if request.auth.uid == userId;
      allow write: if false;
    }
    
    // Rule for adminUsers collection
    match /adminUsers/{userId} {
      // Deny all read and write access for client-side users
      allow read, write: if false;
    }
    
    match /articles {
      allow read: if false; // Only available through APIs
      allow write: if request.auth != null && request.auth.token.role == 'admin';
    }

    // This rule allows anyone with your Firestore database reference to view, edit,
    // and delete all data in your Firestore database. It is useful for getting
    // started, but it is configured to expire after 30 days because it
    // leaves your app open to attackers. At that time, all client
    // requests to your Firestore database will be denied.
    //
    // Make sure to write security rules for your app before that time, or else
    // all client requests to your Firestore database will be denied until you Update
    // your rules
    match /{document=**} {
      allow read, write: if request.time < timestamp.date(2024, 12, 31);
    }
  }
}